name: Python Test and Coverage

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-py313:
    name: Run tests with Python 3.13 and all databases
    if: success()
    runs-on: ubuntu-latest
# Temporarily removed.
#    services:
#      mysql:
#        image: mysql:8.0
#        env:
#          MYSQL_ROOT_PASSWORD: root
#          MYSQL_DATABASE: test_db
#        ports:
#          - 3306:3306
#        options: >-
#          --health-cmd="mysqladmin ping"
#          --health-interval=10s
#          --health-timeout=5s
#          --health-retries=3
#
#      postgres:
#        image: postgres:15
#        env:
#          POSTGRES_USER: postgres
#          POSTGRES_PASSWORD: postgres
#          POSTGRES_DB: test_db
#        ports:
#          - 5432:5432
#        options: >-
#          --health-cmd pg_isready
#          --health-interval=10s
#          --health-timeout=5s
#          --health-retries=3
#
#      mssql:
#        image: mcr.microsoft.com/mssql/server:2022-latest
#        env:
#          ACCEPT_EULA: Y
#          SA_PASSWORD: YourStrong@Passw0rd
#        ports:
#          - 1433:1433
#        options: >-
#          --health-cmd="/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong@Passw0rd -Q 'SELECT 1' || exit 1"
#          --health-interval=10s
#          --health-timeout=5s
#          --health-retries=3
#
#      oracle:
#        image: container-registry.oracle.com/database/express:latest
#        env:
#          ORACLE_PWD: oracle
#        ports:
#          - 1521:1521
#        options: >-
#          --health-cmd="sqlplus -s sys/oracle@//localhost:1521/XE as sysdba <<< 'select 1 from dual;'"
#          --health-interval=30s
#          --health-timeout=10s
#          --health-retries=3

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: "3.13"

    - name: Install full dependencies
      run: |
        pip install -r requirements.txt
        # pip install "rhosocial_activerecord[all]"
        pip install -r requirements-dev.txt
        pip install codecov build

    - name: Run tests with coverage
      run: |
        coverage run -m pytest tests/ --reruns 3 --reruns-delay 1
        coverage xml
        coverage report

    - name: Build package
      run: python -m build

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        flags: unittests,python-3-13
        name: codecov-umbrella-3-13
        fail_ci_if_error: true

  test-other-versions:
    name: Run tests with Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        if [ "${{ matrix.python-version }}" == "3.8" ]; then
          pip install -r requirements-3.8.txt
          pip install -r requirements-dev.txt
        else
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
        fi
        pip install codecov build

    - name: Build package
      run: python -m build

    - name: Run tests with coverage
      run: |
        coverage run -m pytest tests/ --reruns 3 --reruns-delay 1
        coverage xml
        coverage report

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        flags: unittests,python-${{ matrix.python-version }}
        name: codecov-umbrella-${{ matrix.python-version }}
        fail_ci_if_error: true